from config import *
import re
from datetime import *
import telebot
from func import *
from telebot.types import *
from key import *
import minigame

IDGamebot = 738720259
bot = telebot.TeleBot(TOKEN)
# future_in_half_hour = datetime.utcnow() + timedelta(hours=2)
# local_time = future_in_half_hour.replace(microsecond=0, second=0)


@bot.message_handler(commands=['start'])
def start_message(msg):
    bot.send_message(msg.chat.id, f'–î–∞—Ä–æ–≤ –ë–∞–Ω–¥–∏—Ç–æ—Å {msg.from_user.first_name}\n'
                                  f'–ü—Ä–∏—à–ª–∏ –º–Ω–µ /full –∏–∑ –±–æ—Ç–∞',reply_markup=key)
    print(f'–ü—Ä–∏–≤–µ—Ç—Å–≤–∏–µ {msg.from_user.first_name}')


@bot.message_handler(commands=['mtop'])
def mtop(msg):
    try:
        if str(msg.chat.id)[0] == '-':
            bot.send_message(msg.chat.id, text=top_adena(msg.from_user.id),parse_mode='markdown')
        else:
            bot.send_message(msg.chat.id, text=top_adena(msg.chat.id), parse_mode='markdown')
    except:
        bot.send_message(msg.chat.id,'–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É /full –∏–∑ –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞')

@bot.message_handler(commands=['atop'])
def atop(msg):
    try:
        if str(msg.chat.id)[0] == '-':
            bot.send_message(msg.chat.id, text=top_attack(msg.from_user.id),parse_mode='markdown')
        else:
            bot.send_message(msg.chat.id, text=top_attack(msg.chat.id), parse_mode='markdown')
    except:
        bot.send_message(msg.chat.id,'–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É /full –∏–∑ –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞', reply_to_message_id=msg.message_id)

@bot.message_handler(commands=['kpkf'])
@bot.message_handler(commands=['fkpk'])
@bot.message_handler(commands=['full'])
def atop(msg):
    try:
        if str(msg.chat.id)[0] == '-':
            bot.send_message(msg.chat.id, text=profile(msg, msg.from_user.id))
        else:
            bot.send_message(msg.chat.id, text=profile(msg, msg.chat.id))
    except:
        bot.send_message(msg.chat.id, '–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É /full –∏–∑ –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞',
                         reply_to_message_id=msg.message_id)

@bot.message_handler(commands=['kpk'])
def atop(msg):
    try:
        if str(msg.chat.id)[0] == '-':
            bot.send_message(msg.chat.id, text=mini_profile(msg.from_user.id))
        else:
            bot.send_message(msg.chat.id, text=mini_profile(msg.chat.id))
    except:

        bot.send_message(msg.chat.id, '–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É /full –∏–∑ –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞',
                         reply_to_message_id=msg.message_id)


@bot.message_handler(commands=['say'])
def say_func(msg):
    if msg.chat.type == 'private':
        if msg.chat.id in operators:
            one = (msg.text).split()
            if one[1] == '1': #–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç—Ä—è—Å–∏ —à–∞—Ç–∞–π
                text = msg.text[7:] + f'\n\n¬©@{msg.chat.username}'
                bot.send_message(tryasi, text=text)
            elif one[1] == '2':#–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –í–æ–ª—á–∏–π –æ—Ç—Ä—è–¥
                text = msg.text[7:] + f'\n\n¬©@{msg.chat.username}'
                bot.send_message(wolf, text=text)
            elif one[1] == '9': #–û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ–º –æ—Ç—Ä—è–¥–∞–º
                text = msg.text[7:] + f'\n\n¬©@{msg.chat.username}'
                bot.send_message(wolf, text=text)
                #bot.pin_chat_message(chat_id=wolf,message_id=msg.message_id,disable_notification=False)
                bot.send_message(tryasi, text=text)
                #bot.pin_chat_message(chat_id=tryasi, message_id=msg.message_id, disable_notification=False)
            else:
                bot.send_message(msg.chat.id,
                                 '–ó–∞–±—ã–ª —É–∫–∞–∑–∞—Ç—å –æ—Ç—Ä—è–¥ –∫—É–¥–∞ —Å–ª–∞—Ç—å\n–ü—Ä–∏–º–µ—Ä: /say 1 –¢–µ–∫—Å—Ç —Å–æ–æ–±—à–µ–Ω–∏—è\n1 - –¢—Ä—è—Å–∏ —à–∞—Ç–∞–π\n'
                                 '2 - –í–æ–ª—á–∏–π –æ—Ç—Ä—è–¥\n9 - –í—Å–µ –æ—Ç—Ä—è–¥—ã')
        else:
            bot.send_message(msg.chat.id, '—Ç—ã –Ω–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä!')

    else:
        pass

@bot.message_handler(content_types=['new_chat_members'])
def check_in_bd(msg):
    try:
        if str(msg.chat.id)[0] == '-':
            one = check_in_db(msg.new_chat_member.id)
            text = f'–ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–π —á–ª–µ–Ω –≥—Ä—É–ø–ø—ã {msg.new_chat_member.id} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n' \
                   f'\n–°–≤–æ–∏!'
            bot.send_message(msg.chat.id, text=text, parse_mode='markdown', reply_to_message_id=msg.message_id)
    except:
        text = f'–¢—ã –±–ª—è—Ç—å –∫—Ç–æ —Ç–∞–∫–æ–π?? –∞ –Ω—É —É—Ö–∞–¥–∏!'
        bot.send_message(msg.chat.id, text=text, parse_mode='markdown', reply_to_message_id=msg.message_id)
        bot.kick_chat_member(msg.chat.id,msg.new_chat_member.id)

@bot.message_handler(commands=['reg_minigame'])
def mini_game(msg):
    if msg.chat.type == "private":
        try:
            minigame_rockpaper_new_gamer(msg.chat.id)
            bot.send_message(msg.chat.id, text=minigame.text, reply_markup=KNB)
        except:
            bot.send_message(msg.chat.id, text='–£–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω', reply_markup=KNB)

@bot.message_handler(commands=['minigame'])
def mini_game(msg):
    if msg.chat.type == "private":
        try:
            bot.send_message(msg.chat.id, text=minigame.text, reply_markup=KNB)
        except:
            minigame_rockpaper_new_gamer(msg.chat.id)
            print('–∑–∞—Ä–µ–≥–∞–ª–∏')
            bot.send_message(msg.chat.id, text=minigame.text, reply_markup=KNB)

    else:
        pass

@bot.message_handler(commands=['sql'])
def sqfunc(msg):
    if msg.chat.id == wolf:
        text = otryad_list(sq=' –í–æ–ª—á–∏–π –û—Ç—Ä—è–¥üê∫ ')
        bot.send_message(msg.chat.id,text)
    elif msg.chat.id == tryasi:
        text = otryad_list(sq=' –¢—Ä—è—Å–∏-—à–∞—Ç–∞–π ')
        bot.send_message(msg.chat.id, text)
    elif msg.chat.id == suiside:
        text = otryad_list(sq=' –ö—É—Ä–µ–Ω—å "–û—Ç—Ä—è–¥ —Å–∞–º–æ—É–±–∏–π—Ü"üåö ')
        bot.send_message(msg.chat.id, text)
    else:
        pass

@bot.message_handler(commands=['roll'])
def def_roll(msg):
    try:
        param = (msg.text).split()
        if len(param) == 3:
            if int(param[1]) < int(param[2]):
                rnd = roll(int(param[1]), int(param[2]))
                text = f'–¢—ã –Ω–∞—Ä–æ–ª–ª–∏–ª: {rnd}'
                bot.send_message(msg.chat.id, text=text)
            else:
                bot.send_message(msg.chat.id, '–ü–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ!')
        elif len(param) == 2:
            rnd = roll(0, int(param[1]))
            text = f'–¢—ã –Ω–∞—Ä–æ–ª–ª–∏–ª: {rnd}'
            bot.send_message(msg.chat.id, text=text)
        elif len(param) == 1:
            rnd = roll()
            text = f'–¢—ã –Ω–∞—Ä–æ–ª–ª–∏–ª: {rnd}'
            bot.send_message(msg.chat.id, text=text)
        else:
            bot.send_message(msg.chat.id,"–ü—Ä–æ–≤–µ—Ä—å –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    except:
        bot.send_message(msg.chat.id, "–ü—Ä–æ–≤–µ—Ä—å –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")


@bot.channel_post_handler()
def forwmes(msg):
    if msg.chat.id in channel_read:
        for chat in group_frwd_channel:
            bot.forward_message(chat, msg.chat.id, msg.message_id)


@bot.message_handler(content_types=['text'])
def parse_msg(msg):
    if '–°–µ—Ç—å'in msg.text:
        #try:
            if msg.forward_from.id == 738720259:
                parse_kpk(msg)
                if str(msg.chat.id)[0] == '-':
                    bot.reply_to(msg, f'C–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å {msg.from_user.first_name}')
                    bot.delete_message(msg.chat.id, msg.message_id)
                else:
                    bot.reply_to(msg, 'C–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å', reply_markup=key)
                    bot.delete_message(msg.chat.id, msg.message_id)
            else:
                bot.send_message(msg.chat.id, '–°—Ç—Ä–∞–Ω–Ω—ã–π —Ñ–æ—Ä–≤–∞—Ä–¥, –Ω–µ –Ω–∞—Ö–æ–¥–∏—à—å?')
                bot.delete_message(msg.chat.id, msg.message_id)
        #except:
            #bot.send_message(msg.chat.id, '–°—Ç—Ä–∞–Ω–Ω—ã–π —Ñ–æ—Ä–≤–∞—Ä–¥, –Ω–µ –Ω–∞—Ö–æ–¥–∏—à—å?')
    elif 'üîß–ó–∞–ø—á–∞—Å—Ç–∏:'in msg.text:
        try:
            if msg.forward_from.id == 738720259:

                bot.delete_message(msg.chat.id, msg.message_id)
                if str(msg.chat.id)[0] == '-':
                    text = parse_detali_group(msg)
                    bot.send_message(msg.chat.id, text)
                else:
                    text = parse_detali(msg)
                    bot.send_message(msg.chat.id, text, reply_markup=key)
            else:
                bot.send_message(msg.chat.id, '–°—Ç—Ä–∞–Ω–Ω—ã–π —Ñ–æ—Ä–≤–∞—Ä–¥, –Ω–µ –Ω–∞—Ö–æ–¥–∏—à—å?')
        except:
            print('–û—à–∏–±–∫–∞ –≤ –ø–∞—Ä—Å–µ–Ω–≥–µ üîß–ó–∞–ø—á–∞—Å—Ç–∏: main.py')
            pass
    elif 'üìÅ–ü—Ä–æ—Ñ–∏–ª—å'in msg.text:
        if str(msg.chat.id)[0] == '-':
           pass
        else:
            bot.send_message(msg.chat.id, text=profile(msg, msg.chat.id), reply_markup=key)
    elif 'text' in msg.text:
        print(msg)



@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == '–ö–∞–º–µ–Ω—å':
        bot.edit_message_text(text=minigame.knb(call,'–ö–∞–º–µ–Ω—å'),chat_id=call.from_user.id,message_id=call.message.message_id,reply_markup=KNB)
        bot.answer_callback_query(call.id, "–ö–∞–º–µ–Ω—å")
    if call.data == '–Ω–æ–∂–Ω–∏—Ü—ã':
        bot.edit_message_text(minigame.knb(call,'–Ω–æ–∂–Ω–∏—Ü—ã'),call.from_user.id,call.message.message_id,reply_markup=KNB)
        bot.answer_callback_query(call.id, "–Ω–æ–∂–Ω–∏—Ü—ã")
    if call.data == '–±—É–º–∞–≥–∞':
        bot.edit_message_text(minigame.knb(call,'–±—É–º–∞–≥–∞'),call.from_user.id,call.message.message_id,reply_markup=KNB)
        bot.answer_callback_query(call.id, "–±—É–º–∞–≥–∞")
    if call.data == '—è—â–µ—Ä–∏—Ü–∞':
        bot.edit_message_text(minigame.knb(call,'—è—â–µ—Ä–∏—Ü–∞'),call.from_user.id,call.message.message_id,reply_markup=KNB)
        bot.answer_callback_query(call.id, "—è—â–µ—Ä–∏—Ü–∞")
    if call.data == '—Å–ø–æ–∫':
        bot.edit_message_text(minigame.knb(call,'—Å–ø–æ–∫'),call.from_user.id,call.message.message_id,reply_markup=KNB)
        bot.answer_callback_query(call.id, "—Å–ø–æ–∫")
    if call.data == 'cb_exit':
        bot.delete_message(call.from_user.id,call.message.message_id)
        bot.answer_callback_query(call.id, "Exit")
    if call.data == 'cb_stat':
        minigame_rockpaper_update_gamer_win_rate(call.from_user.id)
        #bot.edit_message_text(win_rate(call.from_user.id),call.from_user.id,call.message.message_id,reply_markup=KNB)
        #bot.answer_callback_query(call.id, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")


if __name__ == '__main__':
    bot.polling(none_stop=True)


